{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useState } from 'react';\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport useWindowDimensions from \"react-native-web/dist/exports/useWindowDimensions\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport PrimaryButton from \"../components/ui/PrimaryButton\";\nimport Title from \"../components/ui/Title.ios\";\nimport Colors from \"../constants/colors\";\nimport Card from \"../components/ui/Card\";\nimport QuestionText from \"../components/ui/QuestionText\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction StartMenuScreen(_ref) {\n  var onChooseNumber = _ref.onChooseNumber;\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    enteredNumber = _useState2[0],\n    setEnteredNumber = _useState2[1];\n  var _useWindowDimensions = useWindowDimensions(),\n    width = _useWindowDimensions.width,\n    height = _useWindowDimensions.height;\n  function numberInputHandler(enteredText) {\n    setEnteredNumber(enteredText);\n  }\n  function resetInputHandler() {\n    setEnteredNumber('');\n  }\n  function confirmInputHandler() {\n    var chosenNumber = parseInt(enteredNumber);\n    if (isNaN(chosenNumber) || chosenNumber <= 0 || chosenNumber > 99) {\n      Alert.alert('Invalid number!', 'Number has to be a number between 1 and 99.', [{\n        text: 'Okay',\n        style: 'destructive',\n        onPress: resetInputHandler\n      }]);\n      return;\n    }\n    onChooseNumber(chosenNumber);\n  }\n  var marginTopDistance = height < 380 ? 30 : 100;\n  return _jsx(ScrollView, {\n    style: styles.screen,\n    children: _jsx(KeyboardAvoidingView, {\n      style: styles.screen,\n      behavior: \"position\",\n      children: _jsxs(View, {\n        style: [styles.rootContainer, {\n          marginTop: marginTopDistance\n        }],\n        children: [_jsx(Title, {\n          children: \"Guess Your Number\"\n        }), _jsxs(Card, {\n          children: [_jsx(QuestionText, {\n            children: \"Enter a Number\"\n          }), _jsx(TextInput, {\n            style: styles.numberInput,\n            maxLength: 2,\n            keyboardType: \"number-pad\",\n            autoCapitalize: \"none\",\n            autoCorrect: false,\n            onChangeText: numberInputHandler,\n            value: enteredNumber\n          }), _jsxs(View, {\n            style: styles.buttonsContainer,\n            children: [_jsx(View, {\n              style: styles.buttonContainer,\n              children: _jsx(PrimaryButton, {\n                onPress: resetInputHandler,\n                children: \"Reset\"\n              })\n            }), _jsx(View, {\n              style: styles.buttonContainer,\n              children: _jsx(PrimaryButton, {\n                onPress: confirmInputHandler,\n                children: \"Confirm\"\n              })\n            })]\n          })]\n        })]\n      })\n    })\n  });\n}\nexport default StartMenuScreen;\nvar styles = StyleSheet.create({\n  rootContainer: {\n    flex: 1,\n    alignItems: 'center'\n  },\n  numberInput: {\n    height: 50,\n    width: 50,\n    fontSize: 32,\n    borderBottomColor: Colors.accent500,\n    borderBottomWidth: 2,\n    color: '#ddb52f',\n    marginVertical: 8,\n    fontWeight: 'bold',\n    textAlign: 'center'\n  }\n});","map":{"version":3,"names":["useState","PrimaryButton","Title","Colors","Card","QuestionText","StartMenuScreen","onChooseNumber","enteredNumber","setEnteredNumber","useWindowDimensions","width","height","numberInputHandler","enteredText","resetInputHandler","confirmInputHandler","chosenNumber","parseInt","isNaN","Alert","alert","text","style","onPress","marginTopDistance","styles","screen","rootContainer","marginTop","numberInput","buttonsContainer","buttonContainer","StyleSheet","create","flex","alignItems","fontSize","borderBottomColor","accent500","borderBottomWidth","color","marginVertical","fontWeight","textAlign"],"sources":["C:/Users/bened/Desktop/ReactProjects/React Native/guess-game/screens/StartMenuScreen.js"],"sourcesContent":["import { useState } from 'react';\r\nimport { \r\n    TextInput, \r\n    View, \r\n    StyleSheet, \r\n    Alert, \r\n    useWindowDimensions,\r\n    KeyboardAvoidingView,\r\n    ScrollView \r\n} from 'react-native';\r\n\r\nimport PrimaryButton from '../components/ui/PrimaryButton';\r\nimport Title from '../components/ui/Title.ios';\r\nimport Colors from '../constants/colors';\r\nimport Card  from '../components/ui/Card';\r\nimport QuestionText from '../components/ui/QuestionText';\r\n\r\nfunction StartMenuScreen({onChooseNumber}) {\r\n    const [enteredNumber, setEnteredNumber] = useState('');\r\n\r\n    const { width, height } = useWindowDimensions();\r\n\r\n    function numberInputHandler(enteredText) {\r\n        setEnteredNumber(enteredText);\r\n    }\r\n\r\n    function resetInputHandler() {\r\n        setEnteredNumber('');\r\n    }\r\n\r\n    function confirmInputHandler() {\r\n        const chosenNumber = parseInt(enteredNumber);\r\n\r\n        if (isNaN(chosenNumber) || chosenNumber <= 0 || chosenNumber > 99 ) {\r\n          Alert.alert(\r\n            'Invalid number!', \r\n            'Number has to be a number between 1 and 99.',\r\n             [{ text: 'Okay', style: 'destructive', onPress: resetInputHandler }]\r\n            );\r\n          return;\r\n        }\r\n\r\n        onChooseNumber(chosenNumber);\r\n    }\r\n\r\n    const marginTopDistance = height < 380 ? 30 : 100;\r\n\r\n    return (\r\n     <ScrollView style={styles.screen}>\r\n        <KeyboardAvoidingView style={styles.screen} behavior=\"position\">  \r\n            <View style={[styles.rootContainer, { marginTop: marginTopDistance }]}> \r\n                <Title>Guess Your Number</Title>  \r\n                <Card>\r\n                    <QuestionText>Enter a Number</QuestionText>\r\n                    <TextInput \r\n                        style={styles.numberInput} \r\n                        maxLength={2} \r\n                        keyboardType=\"number-pad\"\r\n                        autoCapitalize=\"none\"\r\n                        autoCorrect={false}\r\n                        onChangeText={numberInputHandler}\r\n                        value={enteredNumber}\r\n                    />\r\n                    <View style={styles.buttonsContainer}>\r\n                        <View style={styles.buttonContainer}>\r\n                            <PrimaryButton onPress={resetInputHandler}>Reset</PrimaryButton>\r\n                        </View>    \r\n                        <View style={styles.buttonContainer}>\r\n                            <PrimaryButton onPress={confirmInputHandler}>Confirm</PrimaryButton>\r\n                        </View>    \r\n                    </View>\r\n                </Card>\r\n            </View>\r\n        </KeyboardAvoidingView> \r\n    </ScrollView>       \r\n    );\r\n}\r\n\r\nexport default StartMenuScreen;\r\n\r\n//const deviceHeight = Dimensions.get('window').height;\r\n\r\nconst styles = StyleSheet.create ({\r\n    rootContainer: {\r\n        flex: 1,\r\n        //marginTop: deviceHeight < 380 ? 30 : 100,\r\n        alignItems: 'center'\r\n    },\r\n    numberInput: {\r\n        height: 50,\r\n        width: 50,\r\n        fontSize: 32,\r\n        borderBottomColor: Colors.accent500,\r\n        borderBottomWidth: 2,\r\n        color: '#ddb52f',\r\n        marginVertical: 8,\r\n        fontWeight: 'bold',\r\n        textAlign: 'center',\r\n    },\r\n});"],"mappings":"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"},"metadata":{},"sourceType":"module"}